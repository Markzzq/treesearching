% path planner 
% author: Ziqian Zhu
% date 06/09/2019

function  path = pathPlanner(K,W)

global r_min 
global L
global gamma_max
global RL
% global W
% global K
% calculate the radius constraint
r_min = L / tan(gamma_max);  % calculate the minimum steering radius

% calculate the node matrix
node = getnode(W,K,RL);


if rem(K,2) == 0
    i = 1;
    route = [];
    while i < K+2
        newroute = [i i+K+2 i+K+3 i+1];
        route = [route newroute];
        i = i+2;
    end
elseif rem(K,2) == 1
    i = 1;
    route = [];
    while i < K+1
        newroute = [i i+K+2 i+K+3 i+1];
        route = [route newroute];
        i = i+2;
    end
    newroute = [i i+K+2];
    route = [route newroute];
end
        
        
    
    
path = getpath(route,node,W,K);  % get the path according to the route generated by the GA algorithm
number_state(1,1) = 1;  % this number is to calculate the number of the nearest node





 
 
 


end

